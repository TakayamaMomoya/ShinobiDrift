//*****************************************************
//
// ゲージの処理[gauge.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "gauge.h"
#include "UI.h"

//=====================================================
// 優先順位を決めるコンストラクタ
//=====================================================
CGauge::CGauge()
{

}

//=====================================================
// デストラクタ
//=====================================================
CGauge::~CGauge()
{

}

//=====================================================
// 生成処理
//=====================================================
CGauge *CGauge::Create(void)
{
	CGauge *pGauge = nullptr;

	pGauge = new CGauge;

	if (pGauge != nullptr)
	{

		pGauge->Init();
	}

	return pGauge;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CGauge::Init(void)
{
	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CGauge::Uninit(void)
{
	for (auto it : m_aPolygon)
	{
		if (it != nullptr)
		{
			it->Uninit();
			it = nullptr;
		}
	}

	m_aPolygon.clear();

	// 自身の破棄
	Release();
}

//=====================================================
// 更新処理
//=====================================================
void CGauge::Update(void)
{

}

//=====================================================
// 描画処理
//=====================================================
void CGauge::Draw(void)
{

}
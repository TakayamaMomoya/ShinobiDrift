//*****************************************************
//
// ロゴ表示処理[logo.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "logo.h"
#include "UI.h"
#include "texture.h"
#include "fade.h"

//*****************************************************
// マクロ定義
//*****************************************************

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
const string PATH_LOGO = "data\\TEXTURE\\UI\\logoTeam.png";	// チームロゴのパス
const float SPEED_DISP_LOGO = 0.01f;	// ロゴ表示のスピード
}

//*****************************************************
// 静的メンバ変数
//*****************************************************

//=====================================================
// コンストラクタ
//=====================================================
CLogo::CLogo() : m_pLogo(nullptr)
{

}

//=====================================================
// デストラクタ
//=====================================================
CLogo::~CLogo()
{

}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CLogo::Init(void)
{
	m_pLogo = CUI::Create();
	
	if (m_pLogo != nullptr)
	{
		m_pLogo->SetPosition(D3DXVECTOR3(0.5f, 0.5f, 0.0f));
		m_pLogo->SetSize(0.1f, 0.05f);
		m_pLogo->SetCol(D3DXCOLOR(1.0f, 1.0f, 1.0f, 0.0f));
		m_pLogo->SetVtx();

		int nIdx = Texture::GetIdx(&PATH_LOGO[0]);
		m_pLogo->SetIdxTexture(nIdx);
	}

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CLogo::Uninit(void)
{
	// オブジェクト全破棄
	CObject::ReleaseAll();
}

//=====================================================
// 更新処理
//=====================================================
void CLogo::Update(void)
{
	// シーンの更新
	CScene::Update();

	if (m_pLogo == nullptr)
		return;

	m_fTimerLogoDisp += SPEED_DISP_LOGO;

	// ロゴのポリゴン色管理
	D3DXCOLOR col = m_pLogo->GetCol();

	col.a = sinf(m_fTimerLogoDisp);

	m_pLogo->SetCol(col);

	if (m_fTimerLogoDisp > D3DX_PI)
	{
		CFade *pFade = CFade::GetInstance();

		if (pFade != nullptr)
		{
			pFade->SetFade(CScene::MODE_TITLE);
		}
	}
}

//=====================================================
// 描画処理
//=====================================================
void CLogo::Draw(void)
{
	
}
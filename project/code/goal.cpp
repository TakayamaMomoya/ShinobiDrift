//*****************************************************
//
// ゴール[goal.cpp]
// Author:森川駿弥
//
//*****************************************************

#include "goal.h"
#include "universal.h"
#include "debugproc.h"
#include "effect3D.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
}

//*****************************************************
// 静的メンバ変数宣言
//*****************************************************

//=====================================================
// コンストラクタ
//=====================================================
CGoal::CGoal(int nPriority)
{
	m_pPlayer = nullptr;
}

//=====================================================
// デストラクタ
//=====================================================
CGoal::~CGoal()
{
}

//=====================================================
// 生成
//=====================================================
CGoal* CGoal::Create()
{
	CGoal* pGoal = new CGoal;

	// 初期化
	pGoal->Init();

	return pGoal;
}

//=====================================================
// 初期化
//=====================================================
HRESULT CGoal::Init()
{
	// 位置設定
	SetPosition(D3DXVECTOR3(20000.0f, 0.0f, 140000.0f));

	return S_OK;
}

//=====================================================
// 終了
//=====================================================
void CGoal::Uninit()
{
	// 自身の削除
	Release();
}

//=====================================================
// 更新
//=====================================================
void CGoal::Update()
{
	int n = 0;

	CPlayer* pPlayer = CPlayer::GetInstance();

	// 位置取得
	D3DXVECTOR3 posPlayer = pPlayer->GetPosition();

	// 移動量取得
	D3DXVECTOR3 movePlayer = pPlayer->GetMove();

	// 始点の位置
	D3DXVECTOR3 startPos = D3DXVECTOR3(5000.0f, 0.0f, 0.0f);

	// 終点の位置
	D3DXVECTOR3 endPos = D3DXVECTOR3(10000.0f, 0.0f, 0.0f);

	// 外積の判定
	if (universal::IsCross(posPlayer,		// プレイヤーの位置
		startPos,		// ゴールの始点
		endPos,			// ゴールの終点
		nullptr,		// 交わった点の割合
		movePlayer))	// プレイヤーの移動量
	{
		n = 1;

		CDebugProc::GetInstance()->Print("\nゴールした");
	}

#ifdef _DEBUG
	CEffect3D::Create(startPos, 200.0f, 3, D3DXCOLOR(1.0f, 0.0f, 1.0f, 1.0f));
	CEffect3D::Create(endPos, 200.0f, 3, D3DXCOLOR(1.0f, 1.0f, 0.0f, 1.0f));

#endif

	CDebugProc::GetInstance()->Print("\nnの値[%d]", n);
}

//=====================================================
// 描画
//=====================================================
void CGoal::Draw()
{
	// 描画
	CObject::Draw();
}

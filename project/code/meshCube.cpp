//*****************************************************
//
// メッシュ道の処理[meshRoad.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "meshCube.h"
#include "object3D.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
	const int NUM_POLYGON = 6;	// ポリゴンの数
}

//=====================================================
// コンストラクタ
//=====================================================
CMeshCube::CMeshCube(int nPriority) : CObject(nPriority)
{

}

//=====================================================
// デストラクタ
//=====================================================
CMeshCube::~CMeshCube()
{

}

//=====================================================
// 生成処理
//=====================================================
CMeshCube *CMeshCube::Create(void)
{
	CMeshCube *pMeshCube = nullptr;

	if (pMeshCube == nullptr)
	{
		// インスタンス生成
		pMeshCube = new CMeshCube;

		if (pMeshCube != nullptr)
		{
			// 初期化処理
			pMeshCube->Init();
		}
	}

	return pMeshCube;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CMeshCube::Init(void)
{
	// 配列のリサイズ
	m_apPolygon3D.resize(NUM_POLYGON);

	for (int i = 0;i < m_apPolygon3D.size();i++)
	{
		m_apPolygon3D[i] = CObject3D::Create(D3DXVECTOR3(0.0f, 0.0f, 0.0f));
	}

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CMeshCube::Uninit(void)
{
	Release();
}

//=====================================================
// 更新処理
//=====================================================
void CMeshCube::Update(void)
{

}

//=====================================================
// 描画処理
//=====================================================
void CMeshCube::Draw(void)
{

}
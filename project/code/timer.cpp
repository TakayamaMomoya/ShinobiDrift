//*****************************************************
//
//タイムの処理[timer.cpp]
// Author:森川駿弥
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "timer.h"

//*****************************************************
// 定数定義
//*****************************************************
namespace
{
	const int VALUE = 120;			// 値
	const int PLACE = 3;			// 桁数
	const float WIDTH = SCREEN_WIDTH * 0.5f;		// 幅
	const float HEIGHT = SCREEN_HEIGHT * 0.5f;		// 高さ
}

//*****************************************************
// 静的メンバ変数宣言
//*****************************************************

//=====================================================
// 優先順位を決めるコンストラクタ
//=====================================================
CTimer::CTimer(int nPriority)
{
}

//=====================================================
// デストラクタ
//=====================================================
CTimer::~CTimer()
{
}

//=====================================================
// 生成処理
//=====================================================
CTimer* CTimer::Create(void)
{
	// インスタンス生成
	CTimer* pTimer = new CTimer;

	// 初期化
	pTimer->Init();

	return pTimer;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CTimer::Init(void)
{
	// 生成
	m_pNumber = CNumber::Create(PLACE, VALUE);

	// 位置設定
	m_pNumber->SetPosition(D3DXVECTOR3(WIDTH, 75.0f, 0.0f));

	// サイズ調整
	m_pNumber->SetSizeAll(35.0f, 35.0f);

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CTimer::Uninit(void)
{
	m_pNumber = nullptr;

	// 自身の破棄
	Release();
}

//=====================================================
// 更新処理
//=====================================================
void CTimer::Update(void)
{
}

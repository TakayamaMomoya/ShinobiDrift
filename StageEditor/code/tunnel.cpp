//*****************************************************
//
// トンネルの処理[tunnel.cpp]
// Author:髙山桃也
//
//*****************************************************

//*****************************************************
// インクルード
//*****************************************************
#include "tunnel.h"

//=====================================================
// コンストラクタ
//=====================================================
CTunnel::CTunnel(int nPriority) : CMeshCylinder(nPriority)
{

}

//=====================================================
// デストラクタ
//=====================================================
CTunnel::~CTunnel()
{

}

//=====================================================
// 生成処理
//=====================================================
CTunnel *CTunnel::Create(std::vector<CMeshRoad::SInfoRoadPoint>::iterator itStart, std::vector<CMeshRoad::SInfoRoadPoint>::iterator itEnd)
{
	CTunnel *pTunnel = nullptr;

	if (pTunnel == nullptr)
	{
		pTunnel = new CTunnel;

		if (pTunnel != nullptr)
		{
			pTunnel->Init();
		}
	}

	return pTunnel;
}

//=====================================================
// 初期化処理
//=====================================================
HRESULT CTunnel::Init(void)
{
	CMeshCylinder::Init();

	return S_OK;
}

//=====================================================
// 終了処理
//=====================================================
void CTunnel::Uninit(void)
{
	CMeshCylinder::Uninit();
}

//=====================================================
// 更新処理
//=====================================================
void CTunnel::Update(void)
{
	CMeshCylinder::Update();
}

//=====================================================
// 描画処理
//=====================================================
void CTunnel::Draw(void)
{
	CMeshCylinder::Draw();
}